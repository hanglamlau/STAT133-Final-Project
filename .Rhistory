dir.create(rawdata)
dir.create('rawdata')
dir.create('data')
dir.create('images')
dir.create('code')
dir.create('resources')
dir.create('report')
file.create('readme.md')
file.rm('readme.md')
unlink('readme.md')
file.create('README.md')
'./rawdata','rawdata.hdat')
download.file('ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/hurdat_format/basin/Basin.NA.ibtracs_hurdat.v03r06.hdat',
'./rawdata','rawdata.hdat')
?download.file()
setwd('./rawdata')
download.file('ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/hurdat_format/basin/Basin.NA.ibtracs_hurdat.v03r06.hdat',
rawdata.hdat')
download.file('ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/hurdat_format/basin/Basin.NA.ibtracs_hurdat.v03r06.hdat',
'rawdata.hdat')
download.file('ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/hurdat_format/basin/Basin.NA.ibtracs_hurdat.v03r06.hdat')
download.file('ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/hurdat_format/basin/Basin.NA.ibtracs_hurdat.v03r06.hdat',
'rawdata')
download.file('ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/hurdat_format/basin/Basin.NA.ibtracs_hurdat.v03r06.hdat',
'rawdata')
url <- 'ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/hurdat_format/basin/Basin.NA.ibtracs_hurdat.v03r06.hdat'
download.file(url,'rawdata')
download.file(url,'rawdata',setInternet2(use = TRUE) )
setInternet2(use=NA)
download.file(url,'rawdata')
setInternet2(use=FALSE)
download.file(url,'rawdata')
?setInternet2
setInternet2()
setwd('../')
getwd()
file.create('./code/data_cleaning.R')
file.create('./code/data_analysis.R')
file.create('./report/report.Rmd')
rawdata <- read.csv('./rawdata/rawdata.hdat')
getwd()
rawdata <- read.csv('./rawdata/rawdata.hdat')
setwd('./rawdata')
rawdata <- read.csv('rawdata.hdat')
rawdata <- read.csv('rawdata')
head(rawdata)
head(rawdata,20)
rawdata <- read.csv('rawdata',header = FALSE, stringsAsFactors=FALSE)
head(rawdata,20)
rawdata <- read.csv('./rawdata/rawdata',header = FALSE, stringsAsFactors=FALSE)
rawdata <- read.csv('rawdata',header = FALSE, stringsAsFactors=FALSE)
head(rawdata,20)
head(rawdata,1)
dim(rawdata)
table(nchar(rawdata))
class(rawdata)
apply(rawdata,1,nchar)
table(apply(rawdata,1,nchar))
head(rawdata)
nchar(rawdata[6,])
nchar(rawdata[1,])
nchar(rawdata)
header <- data.frame(1:1777)
header
head(header)
table(apply(rawdata,1,nchar))
head(rawdata)
grep('[M*]',rawdata)
grep('[*M*]',rawdata)
grep('XING',rawdata)
head(rawdata,14)
grep('XING',rawdata)
rawdata[grepl('XING',rawdata),]
rawdata[grepl('M',rawdata),]
rawdata[nchar==85,]
grep('100',rawdata)
?grep()
grep('M',rawdata[,1])
table(apply(rawdata,1,nchar))
length(grep('M',rawdata[,1]))
rm(header)
header <- rawdata[grepl('M',rawdata[,1])]
header <- rawdata[grepl('M',rawdata[,1]),]
head(header)
tail(header)
dim(header)
header
header_id <- 1:1777
header_date <- substr(header[,1],7,17)
class(header)
header_date <- substr(header,7,17)
header_date
header_date <- as.Date(substr(header,7,17))
header_date <- as.Date(substr(header,7,17),'%d/%m/%y')
header_date
header_date <- as.Date(substr(header,7,17),'%m/%d/%Y')
head(header_date,100)
tail(header_date,100)
header_days <- substr(header,21,22)
header_days
header_days <- substr(header,20,22)
header_days
header_days <- substr(header,19,22)
header_days
header_days <- substr(header,20,22)
header_days <- substr(header,20,23)
header_days
head(header)
header_days <- substr(header,20,22)
header_days
header_days <- as.numeric(substr(header,20,22))
header_days
hist(header_days)
head(header,20)
tail(header,20)
header_names <- substr(header,37,50)
header_names
header_names <- substr(header,35,50)
header_names
header_names <- substr(header,34,50)
header_names
header_names <- substr(header,35,50)
header_names
header_names <- substr(header,35,47)
header_names
header_names <- gsub(' ','',substr(header,35,47))
header_names
header_date
storms <- data.frame(id=header_id,date=header_date,days=header_days,name=header_names)
storms
head(storms)
tail(storms)
storms <- data.frame(id=header_id,date=header_date,days=header_days,name=header_names,row.names = NULL)
head(storms)
tail(storms)
names(storms)
rownames(storms)
rownames(storms) <- NULL
head(storms)
row.names(storms) <- NULL
tail(storms)
format()
format(storms$date,%m/%d/%Y)
as.Date()
?as.Date()
storms$date <- format(storms$date,'%m/%d/%Y')
head(storms)
tail(storms)
write.csv(storms,'./data/storms.csv')
getwd()
write.csv(storms,'../data/storms.csv')
head(rawdata)
head(rawdata,12)
grep('^[ ]{5}',rawdata[,1])
grep('^[' ']{5}',rawdata[,1])
grep('^[\\s]{5}',rawdata[,1])
grep('^[\\s]{4}',rawdata[,1])
grep('^[[:blank:]]{4}',rawdata[,1])
grep('[[:blank:]]{4}',rawdata[,1])
grep('^[[:blank:]]{4}',rawdata[,1])
head(rawdata,12)
grep('^[' ']{4}',rawdata[,1])
grep('[\\*]',rawdata[,1])
length(grep('[\\*]',rawdata[,1]))
12889+1777*2
length(rawdata)
dim(rawdata)
tracks <- rawdata[grepl('[\\*]',rawdata[,1]),]
tracks
head(tracks,15)
head(rawdata,12)
setwd('./rawdata')
getwd()
url2 <- 'ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/csv/basin/Basin.EP.ibtracs_wmo.v03r06.csv'
download.file(url2.'EPrawdata')
download.file(url2,'EPrawdata')
url3 <- 'ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/csv/basin/Basin.NA.ibtracs_wmo.v03r06.csv'
download.file(url3,'NArawdata')
setwd('../')
getwd()
EPdata <- read.csv('./rawdata/EPrawdata.csv')
EPdata <- read.csv('rawdata/EPrawdata.csv')
setwd('./rawdata')
EPdata <- read.csv('EPrawdata.csv')
EPdata <- read.csv('EPrawdata')
download.file(url2,'EPrawdata.csv')
download.file(url3,'NArawdata,csv')
download.file(url3,'NArawdata.csv')
EPdata <- read.csv('EPrawdata.csv',skip=1)
head(EPdata)
NAdata <- read.csv('NArawdata.csv',skip=1)
head(NAdata)
EPdata <- EPdata[-1,]
NAdata <- NAdata[-1,]
head(EPdata)
head(NAdata)
library(maps)
library(ggplot2)
maps()
map()
head(NAdata)
ggplot(aes(data=NAdata,x=Latitude,y=Longitude))+
geom_point()
ggplot(aes(data=NAdata,x=Latitude,y=Longitude))+
geom_line()
ggplot(aes(data=NAdata,x=Longitude,y=Latitude))+
geom_line()
with(NAdata,points(Longitude,Latitude))
ggplot(aes(data=NAdata,x=Longitude,y=Latitude))+
geom_line()
q()
R.Version()
install.packages('dplyr')
library(ggplot2)
updateR()
updateR
updateR()
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR() #
R.Version()
q()
